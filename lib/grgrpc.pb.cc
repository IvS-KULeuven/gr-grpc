// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grgrpc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grgrpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace grgrpc {
class EmptyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Empty> {
} _Empty_default_instance_;
class StatusDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StatusData> {
} _StatusData_default_instance_;
class GRDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GRData> {
} _GRData_default_instance_;
class BoolDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bool> {
} _Bool_default_instance_;
class FloatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Float> {
} _Float_default_instance_;
class ParametersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Parameters> {
} _Parameters_default_instance_;
class TagDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Tag> {
} _Tag_default_instance_;

namespace protobuf_grgrpc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GRData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GRData, m_byte_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GRData, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GRData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GRData, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bool, boolean_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Float, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Float, _float_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameters, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameters, gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parameters, sample_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, srcid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Empty)},
  { 4, -1, sizeof(StatusData)},
  { 9, -1, sizeof(GRData)},
  { 17, -1, sizeof(Bool)},
  { 22, -1, sizeof(Float)},
  { 27, -1, sizeof(Parameters)},
  { 34, -1, sizeof(Tag)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatusData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GRData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Float_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Parameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Tag_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "grgrpc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _Empty_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _StatusData_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GRData_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Bool_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Float_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Parameters_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Tag_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Empty_default_instance_.DefaultConstruct();
  _StatusData_default_instance_.DefaultConstruct();
  _GRData_default_instance_.DefaultConstruct();
  _Bool_default_instance_.DefaultConstruct();
  _Float_default_instance_.DefaultConstruct();
  _Parameters_default_instance_.DefaultConstruct();
  _Tag_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014grgrpc.proto\022\006grgrpc\"\007\n\005Empty\"\032\n\nStatu"
      "sData\022\014\n\004code\030\001 \001(\t\"\205\001\n\006GRData\022\016\n\006m_byte"
      "\030\001 \003(\014\022\014\n\004code\030\002 \001(\t\022!\n\004type\030\003 \001(\0162\023.grg"
      "rpc.GRData.Type\022\030\n\003tag\030\004 \003(\0132\013.grgrpc.Ta"
      "g\" \n\004Type\022\013\n\007REQUEST\020\000\022\013\n\007PUBLISH\020\001\"\027\n\004B"
      "ool\022\017\n\007boolean\030\001 \001(\010\"\027\n\005Float\022\016\n\006_float\030"
      "\001 \001(\002\"B\n\nParameters\022\021\n\tfrequency\030\001 \001(\002\022\014"
      "\n\004gain\030\002 \001(\002\022\023\n\013sample_rate\030\003 \001(\005\"@\n\003Tag"
      "\022\016\n\006offset\030\001 \001(\004\022\013\n\003key\030\002 \001(\t\022\r\n\005value\030\003"
      " \001(\t\022\r\n\005srcid\030\004 \001(\t2\200\001\n\014GNURadioLink\0227\n\013"
      "PublishData\022\016.grgrpc.GRData\032\022.grgrpc.Sta"
      "tusData\"\000(\0010\001\0227\n\013RequestData\022\022.grgrpc.St"
      "atusData\032\016.grgrpc.GRData\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grgrpc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_grgrpc_2eproto

const ::google::protobuf::EnumDescriptor* GRData_Type_descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_enum_descriptors[0];
}
bool GRData_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GRData_Type GRData::REQUEST;
const GRData_Type GRData::PUBLISH;
const GRData_Type GRData::Type_MIN;
const GRData_Type GRData::Type_MAX;
const int GRData::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grgrpc.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:grgrpc.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[0].descriptor;
}

const Empty& Empty::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.Empty)
  // @@protoc_insertion_point(serialize_end:grgrpc.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.Empty)
  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.Empty)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusData::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusData::StatusData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.StatusData)
}
StatusData::StatusData(const StatusData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:grgrpc.StatusData)
}

void StatusData::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StatusData::~StatusData() {
  // @@protoc_insertion_point(destructor:grgrpc.StatusData)
  SharedDtor();
}

void StatusData::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusData::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[1].descriptor;
}

const StatusData& StatusData::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatusData* StatusData::New(::google::protobuf::Arena* arena) const {
  StatusData* n = new StatusData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusData::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.StatusData)
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StatusData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.StatusData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string code = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grgrpc.StatusData.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.StatusData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.StatusData)
  return false;
#undef DO_
}

void StatusData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.StatusData)
  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.StatusData.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.StatusData)
}

::google::protobuf::uint8* StatusData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.StatusData)
  // string code = 1;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.StatusData.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.StatusData)
  return target;
}

size_t StatusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.StatusData)
  size_t total_size = 0;

  // string code = 1;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.StatusData)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.StatusData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.StatusData)
    MergeFrom(*source);
  }
}

void StatusData::MergeFrom(const StatusData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.StatusData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void StatusData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.StatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusData::CopyFrom(const StatusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.StatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusData::IsInitialized() const {
  return true;
}

void StatusData::Swap(StatusData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusData::InternalSwap(StatusData* other) {
  code_.Swap(&other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusData::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusData

// string code = 1;
void StatusData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StatusData::code() const {
  // @@protoc_insertion_point(field_get:grgrpc.StatusData.code)
  return code_.GetNoArena();
}
void StatusData::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.StatusData.code)
}
#if LANG_CXX11
void StatusData::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.StatusData.code)
}
#endif
void StatusData::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.StatusData.code)
}
void StatusData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.StatusData.code)
}
::std::string* StatusData::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.StatusData.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StatusData::release_code() {
  // @@protoc_insertion_point(field_release:grgrpc.StatusData.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StatusData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.StatusData.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GRData::kMByteFieldNumber;
const int GRData::kCodeFieldNumber;
const int GRData::kTypeFieldNumber;
const int GRData::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GRData::GRData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.GRData)
}
GRData::GRData(const GRData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      m_byte_(from.m_byte_),
      tag_(from.tag_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:grgrpc.GRData)
}

void GRData::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

GRData::~GRData() {
  // @@protoc_insertion_point(destructor:grgrpc.GRData)
  SharedDtor();
}

void GRData::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GRData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GRData::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[2].descriptor;
}

const GRData& GRData::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GRData* GRData::New(::google::protobuf::Arena* arena) const {
  GRData* n = new GRData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GRData::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.GRData)
  m_byte_.Clear();
  tag_.Clear();
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool GRData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.GRData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes m_byte = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_m_byte()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string code = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grgrpc.GRData.code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grgrpc.GRData.Type type = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::grgrpc::GRData_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grgrpc.Tag tag = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tag()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.GRData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.GRData)
  return false;
#undef DO_
}

void GRData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.GRData)
  // repeated bytes m_byte = 1;
  for (int i = 0; i < this->m_byte_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->m_byte(i), output);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.GRData.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  // .grgrpc.GRData.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // repeated .grgrpc.Tag tag = 4;
  for (unsigned int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->tag(i), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.GRData)
}

::google::protobuf::uint8* GRData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.GRData)
  // repeated bytes m_byte = 1;
  for (int i = 0; i < this->m_byte_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->m_byte(i), target);
  }

  // string code = 2;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.GRData.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  // .grgrpc.GRData.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // repeated .grgrpc.Tag tag = 4;
  for (unsigned int i = 0, n = this->tag_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->tag(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.GRData)
  return target;
}

size_t GRData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.GRData)
  size_t total_size = 0;

  // repeated bytes m_byte = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->m_byte_size());
  for (int i = 0; i < this->m_byte_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->m_byte(i));
  }

  // repeated .grgrpc.Tag tag = 4;
  {
    unsigned int count = this->tag_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tag(i));
    }
  }

  // string code = 2;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  // .grgrpc.GRData.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GRData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.GRData)
  GOOGLE_DCHECK_NE(&from, this);
  const GRData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GRData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.GRData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.GRData)
    MergeFrom(*source);
  }
}

void GRData::MergeFrom(const GRData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.GRData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  m_byte_.MergeFrom(from.m_byte_);
  tag_.MergeFrom(from.tag_);
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GRData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.GRData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GRData::CopyFrom(const GRData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.GRData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GRData::IsInitialized() const {
  return true;
}

void GRData::Swap(GRData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GRData::InternalSwap(GRData* other) {
  m_byte_.UnsafeArenaSwap(&other->m_byte_);
  tag_.UnsafeArenaSwap(&other->tag_);
  code_.Swap(&other->code_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GRData::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GRData

// repeated bytes m_byte = 1;
int GRData::m_byte_size() const {
  return m_byte_.size();
}
void GRData::clear_m_byte() {
  m_byte_.Clear();
}
const ::std::string& GRData::m_byte(int index) const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.m_byte)
  return m_byte_.Get(index);
}
::std::string* GRData::mutable_m_byte(int index) {
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.m_byte)
  return m_byte_.Mutable(index);
}
void GRData::set_m_byte(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grgrpc.GRData.m_byte)
  m_byte_.Mutable(index)->assign(value);
}
void GRData::set_m_byte(int index, const char* value) {
  m_byte_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grgrpc.GRData.m_byte)
}
void GRData::set_m_byte(int index, const void* value, size_t size) {
  m_byte_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grgrpc.GRData.m_byte)
}
::std::string* GRData::add_m_byte() {
  // @@protoc_insertion_point(field_add_mutable:grgrpc.GRData.m_byte)
  return m_byte_.Add();
}
void GRData::add_m_byte(const ::std::string& value) {
  m_byte_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grgrpc.GRData.m_byte)
}
void GRData::add_m_byte(const char* value) {
  m_byte_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grgrpc.GRData.m_byte)
}
void GRData::add_m_byte(const void* value, size_t size) {
  m_byte_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grgrpc.GRData.m_byte)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GRData::m_byte() const {
  // @@protoc_insertion_point(field_list:grgrpc.GRData.m_byte)
  return m_byte_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GRData::mutable_m_byte() {
  // @@protoc_insertion_point(field_mutable_list:grgrpc.GRData.m_byte)
  return &m_byte_;
}

// string code = 2;
void GRData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GRData::code() const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.code)
  return code_.GetNoArena();
}
void GRData::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.GRData.code)
}
#if LANG_CXX11
void GRData::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.GRData.code)
}
#endif
void GRData::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.GRData.code)
}
void GRData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.GRData.code)
}
::std::string* GRData::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GRData::release_code() {
  // @@protoc_insertion_point(field_release:grgrpc.GRData.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GRData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.GRData.code)
}

// .grgrpc.GRData.Type type = 3;
void GRData::clear_type() {
  type_ = 0;
}
::grgrpc::GRData_Type GRData::type() const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.type)
  return static_cast< ::grgrpc::GRData_Type >(type_);
}
void GRData::set_type(::grgrpc::GRData_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.GRData.type)
}

// repeated .grgrpc.Tag tag = 4;
int GRData::tag_size() const {
  return tag_.size();
}
void GRData::clear_tag() {
  tag_.Clear();
}
const ::grgrpc::Tag& GRData::tag(int index) const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.tag)
  return tag_.Get(index);
}
::grgrpc::Tag* GRData::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.tag)
  return tag_.Mutable(index);
}
::grgrpc::Tag* GRData::add_tag() {
  // @@protoc_insertion_point(field_add:grgrpc.GRData.tag)
  return tag_.Add();
}
::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >*
GRData::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:grgrpc.GRData.tag)
  return &tag_;
}
const ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >&
GRData::tag() const {
  // @@protoc_insertion_point(field_list:grgrpc.GRData.tag)
  return tag_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bool::kBooleanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bool::Bool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.Bool)
}
Bool::Bool(const Bool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  boolean_ = from.boolean_;
  // @@protoc_insertion_point(copy_constructor:grgrpc.Bool)
}

void Bool::SharedCtor() {
  boolean_ = false;
  _cached_size_ = 0;
}

Bool::~Bool() {
  // @@protoc_insertion_point(destructor:grgrpc.Bool)
  SharedDtor();
}

void Bool::SharedDtor() {
}

void Bool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bool::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[3].descriptor;
}

const Bool& Bool::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bool* Bool::New(::google::protobuf::Arena* arena) const {
  Bool* n = new Bool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bool::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.Bool)
  boolean_ = false;
}

bool Bool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.Bool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool boolean = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.Bool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.Bool)
  return false;
#undef DO_
}

void Bool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.Bool)
  // bool boolean = 1;
  if (this->boolean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolean(), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.Bool)
}

::google::protobuf::uint8* Bool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.Bool)
  // bool boolean = 1;
  if (this->boolean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolean(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.Bool)
  return target;
}

size_t Bool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.Bool)
  size_t total_size = 0;

  // bool boolean = 1;
  if (this->boolean() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.Bool)
  GOOGLE_DCHECK_NE(&from, this);
  const Bool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.Bool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.Bool)
    MergeFrom(*source);
  }
}

void Bool::MergeFrom(const Bool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.Bool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.boolean() != 0) {
    set_boolean(from.boolean());
  }
}

void Bool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bool::CopyFrom(const Bool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.Bool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bool::IsInitialized() const {
  return true;
}

void Bool::Swap(Bool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bool::InternalSwap(Bool* other) {
  std::swap(boolean_, other->boolean_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bool::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bool

// bool boolean = 1;
void Bool::clear_boolean() {
  boolean_ = false;
}
bool Bool::boolean() const {
  // @@protoc_insertion_point(field_get:grgrpc.Bool.boolean)
  return boolean_;
}
void Bool::set_boolean(bool value) {
  
  boolean_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Bool.boolean)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Float::kFloatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Float::Float()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.Float)
}
Float::Float(const Float& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _float_ = from._float_;
  // @@protoc_insertion_point(copy_constructor:grgrpc.Float)
}

void Float::SharedCtor() {
  _float_ = 0;
  _cached_size_ = 0;
}

Float::~Float() {
  // @@protoc_insertion_point(destructor:grgrpc.Float)
  SharedDtor();
}

void Float::SharedDtor() {
}

void Float::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Float::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[4].descriptor;
}

const Float& Float::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Float* Float::New(::google::protobuf::Arena* arena) const {
  Float* n = new Float;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Float::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.Float)
  _float_ = 0;
}

bool Float::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.Float)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float _float = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.Float)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.Float)
  return false;
#undef DO_
}

void Float::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.Float)
  // float _float = 1;
  if (this->_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->_float(), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.Float)
}

::google::protobuf::uint8* Float::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.Float)
  // float _float = 1;
  if (this->_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->_float(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.Float)
  return target;
}

size_t Float::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.Float)
  size_t total_size = 0;

  // float _float = 1;
  if (this->_float() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Float::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.Float)
  GOOGLE_DCHECK_NE(&from, this);
  const Float* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Float>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.Float)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.Float)
    MergeFrom(*source);
  }
}

void Float::MergeFrom(const Float& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.Float)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._float() != 0) {
    set__float(from._float());
  }
}

void Float::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Float::CopyFrom(const Float& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.Float)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Float::IsInitialized() const {
  return true;
}

void Float::Swap(Float* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Float::InternalSwap(Float* other) {
  std::swap(_float_, other->_float_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Float::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Float

// float _float = 1;
void Float::clear__float() {
  _float_ = 0;
}
float Float::_float() const {
  // @@protoc_insertion_point(field_get:grgrpc.Float._float)
  return _float_;
}
void Float::set__float(float value) {
  
  _float_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Float._float)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameters::kFrequencyFieldNumber;
const int Parameters::kGainFieldNumber;
const int Parameters::kSampleRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameters::Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.Parameters)
}
Parameters::Parameters(const Parameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frequency_, &from.frequency_,
    reinterpret_cast<char*>(&sample_rate_) -
    reinterpret_cast<char*>(&frequency_) + sizeof(sample_rate_));
  // @@protoc_insertion_point(copy_constructor:grgrpc.Parameters)
}

void Parameters::SharedCtor() {
  ::memset(&frequency_, 0, reinterpret_cast<char*>(&sample_rate_) -
    reinterpret_cast<char*>(&frequency_) + sizeof(sample_rate_));
  _cached_size_ = 0;
}

Parameters::~Parameters() {
  // @@protoc_insertion_point(destructor:grgrpc.Parameters)
  SharedDtor();
}

void Parameters::SharedDtor() {
}

void Parameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parameters::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[5].descriptor;
}

const Parameters& Parameters::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Parameters* Parameters::New(::google::protobuf::Arena* arena) const {
  Parameters* n = new Parameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.Parameters)
  ::memset(&frequency_, 0, reinterpret_cast<char*>(&sample_rate_) -
    reinterpret_cast<char*>(&frequency_) + sizeof(sample_rate_));
}

bool Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.Parameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float frequency = 1;
      case 1: {
        if (tag == 13u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float gain = 2;
      case 2: {
        if (tag == 21u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &gain_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sample_rate = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sample_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.Parameters)
  return false;
#undef DO_
}

void Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.Parameters)
  // float frequency = 1;
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->frequency(), output);
  }

  // float gain = 2;
  if (this->gain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->gain(), output);
  }

  // int32 sample_rate = 3;
  if (this->sample_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sample_rate(), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.Parameters)
}

::google::protobuf::uint8* Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.Parameters)
  // float frequency = 1;
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->frequency(), target);
  }

  // float gain = 2;
  if (this->gain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->gain(), target);
  }

  // int32 sample_rate = 3;
  if (this->sample_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sample_rate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.Parameters)
  return target;
}

size_t Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.Parameters)
  size_t total_size = 0;

  // float frequency = 1;
  if (this->frequency() != 0) {
    total_size += 1 + 4;
  }

  // float gain = 2;
  if (this->gain() != 0) {
    total_size += 1 + 4;
  }

  // int32 sample_rate = 3;
  if (this->sample_rate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sample_rate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.Parameters)
    MergeFrom(*source);
  }
}

void Parameters::MergeFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
  if (from.gain() != 0) {
    set_gain(from.gain());
  }
  if (from.sample_rate() != 0) {
    set_sample_rate(from.sample_rate());
  }
}

void Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameters::CopyFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameters::IsInitialized() const {
  return true;
}

void Parameters::Swap(Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameters::InternalSwap(Parameters* other) {
  std::swap(frequency_, other->frequency_);
  std::swap(gain_, other->gain_);
  std::swap(sample_rate_, other->sample_rate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Parameters::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Parameters

// float frequency = 1;
void Parameters::clear_frequency() {
  frequency_ = 0;
}
float Parameters::frequency() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.frequency)
  return frequency_;
}
void Parameters::set_frequency(float value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.frequency)
}

// float gain = 2;
void Parameters::clear_gain() {
  gain_ = 0;
}
float Parameters::gain() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.gain)
  return gain_;
}
void Parameters::set_gain(float value) {
  
  gain_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.gain)
}

// int32 sample_rate = 3;
void Parameters::clear_sample_rate() {
  sample_rate_ = 0;
}
::google::protobuf::int32 Parameters::sample_rate() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.sample_rate)
  return sample_rate_;
}
void Parameters::set_sample_rate(::google::protobuf::int32 value) {
  
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.sample_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tag::kOffsetFieldNumber;
const int Tag::kKeyFieldNumber;
const int Tag::kValueFieldNumber;
const int Tag::kSrcidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tag::Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_grgrpc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grgrpc.Tag)
}
Tag::Tag(const Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  srcid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcid().size() > 0) {
    srcid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcid_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:grgrpc.Tag)
}

void Tag::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:grgrpc.Tag)
  SharedDtor();
}

void Tag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tag::descriptor() {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[6].descriptor;
}

const Tag& Tag::default_instance() {
  protobuf_grgrpc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Tag* Tag::New(::google::protobuf::Arena* arena) const {
  Tag* n = new Tag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:grgrpc.Tag)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
}

bool Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grgrpc.Tag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 offset = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grgrpc.Tag.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grgrpc.Tag.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string srcid = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcid().data(), this->srcid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grgrpc.Tag.srcid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grgrpc.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grgrpc.Tag)
  return false;
#undef DO_
}

void Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grgrpc.Tag)
  // uint64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->value(), output);
  }

  // string srcid = 4;
  if (this->srcid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.srcid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->srcid(), output);
  }

  // @@protoc_insertion_point(serialize_end:grgrpc.Tag)
}

::google::protobuf::uint8* Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grgrpc.Tag)
  // uint64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // string value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->value(), target);
  }

  // string srcid = 4;
  if (this->srcid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcid().data(), this->srcid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grgrpc.Tag.srcid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->srcid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grgrpc.Tag)
  return target;
}

size_t Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grgrpc.Tag)
  size_t total_size = 0;

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string srcid = 4;
  if (this->srcid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcid());
  }

  // uint64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grgrpc.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grgrpc.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grgrpc.Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grgrpc.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.srcid().size() > 0) {

    srcid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcid_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grgrpc.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grgrpc.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  return true;
}

void Tag::Swap(Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tag::InternalSwap(Tag* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  srcid_.Swap(&other->srcid_);
  std::swap(offset_, other->offset_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tag::GetMetadata() const {
  protobuf_grgrpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_grgrpc_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tag

// uint64 offset = 1;
void Tag::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Tag::offset() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.offset)
  return offset_;
}
void Tag::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Tag.offset)
}

// string key = 2;
void Tag::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Tag::key() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.key)
  return key_.GetNoArena();
}
void Tag::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.key)
}
#if LANG_CXX11
void Tag::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.key)
}
#endif
void Tag::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.key)
}
void Tag::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.key)
}
::std::string* Tag::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Tag::release_key() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tag::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.key)
}

// string value = 3;
void Tag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Tag::value() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.value)
  return value_.GetNoArena();
}
void Tag::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.value)
}
#if LANG_CXX11
void Tag::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.value)
}
#endif
void Tag::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.value)
}
void Tag::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.value)
}
::std::string* Tag::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Tag::release_value() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.value)
}

// string srcid = 4;
void Tag::clear_srcid() {
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Tag::srcid() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.srcid)
  return srcid_.GetNoArena();
}
void Tag::set_srcid(const ::std::string& value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.srcid)
}
#if LANG_CXX11
void Tag::set_srcid(::std::string&& value) {
  
  srcid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.srcid)
}
#endif
void Tag::set_srcid(const char* value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.srcid)
}
void Tag::set_srcid(const char* value, size_t size) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.srcid)
}
::std::string* Tag::mutable_srcid() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.srcid)
  return srcid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Tag::release_srcid() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.srcid)
  
  return srcid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Tag::set_allocated_srcid(::std::string* srcid) {
  if (srcid != NULL) {
    
  } else {
    
  }
  srcid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcid);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.srcid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace grgrpc

// @@protoc_insertion_point(global_scope)
