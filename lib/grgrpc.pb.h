// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grgrpc.proto

#ifndef PROTOBUF_grgrpc_2eproto__INCLUDED
#define PROTOBUF_grgrpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace grgrpc {
class Bool;
class BoolDefaultTypeInternal;
extern BoolDefaultTypeInternal _Bool_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Float;
class FloatDefaultTypeInternal;
extern FloatDefaultTypeInternal _Float_default_instance_;
class GRData;
class GRDataDefaultTypeInternal;
extern GRDataDefaultTypeInternal _GRData_default_instance_;
class Parameters;
class ParametersDefaultTypeInternal;
extern ParametersDefaultTypeInternal _Parameters_default_instance_;
class StatusData;
class StatusDataDefaultTypeInternal;
extern StatusDataDefaultTypeInternal _StatusData_default_instance_;
class Tag;
class TagDefaultTypeInternal;
extern TagDefaultTypeInternal _Tag_default_instance_;
}  // namespace grgrpc

namespace grgrpc {

namespace protobuf_grgrpc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_grgrpc_2eproto

enum GRData_Type {
  GRData_Type_REQUEST = 0,
  GRData_Type_PUBLISH = 1,
  GRData_Type_GRData_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GRData_Type_GRData_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GRData_Type_IsValid(int value);
const GRData_Type GRData_Type_Type_MIN = GRData_Type_REQUEST;
const GRData_Type GRData_Type_Type_MAX = GRData_Type_PUBLISH;
const int GRData_Type_Type_ARRAYSIZE = GRData_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* GRData_Type_descriptor();
inline const ::std::string& GRData_Type_Name(GRData_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    GRData_Type_descriptor(), value);
}
inline bool GRData_Type_Parse(
    const ::std::string& name, GRData_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GRData_Type>(
    GRData_Type_descriptor(), name, value);
}
// ===================================================================

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const PROTOBUF_FINAL { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grgrpc.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatusData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.StatusData) */ {
 public:
  StatusData();
  virtual ~StatusData();

  StatusData(const StatusData& from);

  inline StatusData& operator=(const StatusData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StatusData& default_instance();

  static inline const StatusData* internal_default_instance() {
    return reinterpret_cast<const StatusData*>(
               &_StatusData_default_instance_);
  }

  void Swap(StatusData* other);

  // implements Message ----------------------------------------------

  inline StatusData* New() const PROTOBUF_FINAL { return New(NULL); }

  StatusData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatusData& from);
  void MergeFrom(const StatusData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatusData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:grgrpc.StatusData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GRData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.GRData) */ {
 public:
  GRData();
  virtual ~GRData();

  GRData(const GRData& from);

  inline GRData& operator=(const GRData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GRData& default_instance();

  static inline const GRData* internal_default_instance() {
    return reinterpret_cast<const GRData*>(
               &_GRData_default_instance_);
  }

  void Swap(GRData* other);

  // implements Message ----------------------------------------------

  inline GRData* New() const PROTOBUF_FINAL { return New(NULL); }

  GRData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GRData& from);
  void MergeFrom(const GRData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GRData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GRData_Type Type;
  static const Type REQUEST =
    GRData_Type_REQUEST;
  static const Type PUBLISH =
    GRData_Type_PUBLISH;
  static inline bool Type_IsValid(int value) {
    return GRData_Type_IsValid(value);
  }
  static const Type Type_MIN =
    GRData_Type_Type_MIN;
  static const Type Type_MAX =
    GRData_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    GRData_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return GRData_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return GRData_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return GRData_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated bytes m_byte = 1;
  int m_byte_size() const;
  void clear_m_byte();
  static const int kMByteFieldNumber = 1;
  const ::std::string& m_byte(int index) const;
  ::std::string* mutable_m_byte(int index);
  void set_m_byte(int index, const ::std::string& value);
  void set_m_byte(int index, const char* value);
  void set_m_byte(int index, const void* value, size_t size);
  ::std::string* add_m_byte();
  void add_m_byte(const ::std::string& value);
  void add_m_byte(const char* value);
  void add_m_byte(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& m_byte() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_m_byte();

  // repeated .grgrpc.Tag tag = 4;
  int tag_size() const;
  void clear_tag();
  static const int kTagFieldNumber = 4;
  const ::grgrpc::Tag& tag(int index) const;
  ::grgrpc::Tag* mutable_tag(int index);
  ::grgrpc::Tag* add_tag();
  ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >*
      mutable_tag();
  const ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >&
      tag() const;

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // .grgrpc.GRData.Type type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::grgrpc::GRData_Type type() const;
  void set_type(::grgrpc::GRData_Type value);

  // @@protoc_insertion_point(class_scope:grgrpc.GRData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> m_byte_;
  ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag > tag_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.Bool) */ {
 public:
  Bool();
  virtual ~Bool();

  Bool(const Bool& from);

  inline Bool& operator=(const Bool& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bool& default_instance();

  static inline const Bool* internal_default_instance() {
    return reinterpret_cast<const Bool*>(
               &_Bool_default_instance_);
  }

  void Swap(Bool* other);

  // implements Message ----------------------------------------------

  inline Bool* New() const PROTOBUF_FINAL { return New(NULL); }

  Bool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Bool& from);
  void MergeFrom(const Bool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Bool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool boolean = 1;
  void clear_boolean();
  static const int kBooleanFieldNumber = 1;
  bool boolean() const;
  void set_boolean(bool value);

  // @@protoc_insertion_point(class_scope:grgrpc.Bool)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool boolean_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Float : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.Float) */ {
 public:
  Float();
  virtual ~Float();

  Float(const Float& from);

  inline Float& operator=(const Float& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Float& default_instance();

  static inline const Float* internal_default_instance() {
    return reinterpret_cast<const Float*>(
               &_Float_default_instance_);
  }

  void Swap(Float* other);

  // implements Message ----------------------------------------------

  inline Float* New() const PROTOBUF_FINAL { return New(NULL); }

  Float* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Float& from);
  void MergeFrom(const Float& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Float* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float _float = 1;
  void clear__float();
  static const int kFloatFieldNumber = 1;
  float _float() const;
  void set__float(float value);

  // @@protoc_insertion_point(class_scope:grgrpc.Float)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float _float_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Parameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.Parameters) */ {
 public:
  Parameters();
  virtual ~Parameters();

  Parameters(const Parameters& from);

  inline Parameters& operator=(const Parameters& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Parameters& default_instance();

  static inline const Parameters* internal_default_instance() {
    return reinterpret_cast<const Parameters*>(
               &_Parameters_default_instance_);
  }

  void Swap(Parameters* other);

  // implements Message ----------------------------------------------

  inline Parameters* New() const PROTOBUF_FINAL { return New(NULL); }

  Parameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Parameters& from);
  void MergeFrom(const Parameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Parameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float frequency = 1;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 1;
  float frequency() const;
  void set_frequency(float value);

  // float gain = 2;
  void clear_gain();
  static const int kGainFieldNumber = 2;
  float gain() const;
  void set_gain(float value);

  // int32 sample_rate = 3;
  void clear_sample_rate();
  static const int kSampleRateFieldNumber = 3;
  ::google::protobuf::int32 sample_rate() const;
  void set_sample_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grgrpc.Parameters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float frequency_;
  float gain_;
  ::google::protobuf::int32 sample_rate_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Tag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grgrpc.Tag) */ {
 public:
  Tag();
  virtual ~Tag();

  Tag(const Tag& from);

  inline Tag& operator=(const Tag& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tag& default_instance();

  static inline const Tag* internal_default_instance() {
    return reinterpret_cast<const Tag*>(
               &_Tag_default_instance_);
  }

  void Swap(Tag* other);

  // implements Message ----------------------------------------------

  inline Tag* New() const PROTOBUF_FINAL { return New(NULL); }

  Tag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tag& from);
  void MergeFrom(const Tag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // string srcid = 4;
  void clear_srcid();
  static const int kSrcidFieldNumber = 4;
  const ::std::string& srcid() const;
  void set_srcid(const ::std::string& value);
  #if LANG_CXX11
  void set_srcid(::std::string&& value);
  #endif
  void set_srcid(const char* value);
  void set_srcid(const char* value, size_t size);
  ::std::string* mutable_srcid();
  ::std::string* release_srcid();
  void set_allocated_srcid(::std::string* srcid);

  // uint64 offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:grgrpc.Tag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr srcid_;
  ::google::protobuf::uint64 offset_;
  mutable int _cached_size_;
  friend struct  protobuf_grgrpc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

// -------------------------------------------------------------------

// StatusData

// string code = 1;
inline void StatusData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StatusData::code() const {
  // @@protoc_insertion_point(field_get:grgrpc.StatusData.code)
  return code_.GetNoArena();
}
inline void StatusData::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.StatusData.code)
}
#if LANG_CXX11
inline void StatusData::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.StatusData.code)
}
#endif
inline void StatusData::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.StatusData.code)
}
inline void StatusData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.StatusData.code)
}
inline ::std::string* StatusData::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.StatusData.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StatusData::release_code() {
  // @@protoc_insertion_point(field_release:grgrpc.StatusData.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StatusData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.StatusData.code)
}

// -------------------------------------------------------------------

// GRData

// repeated bytes m_byte = 1;
inline int GRData::m_byte_size() const {
  return m_byte_.size();
}
inline void GRData::clear_m_byte() {
  m_byte_.Clear();
}
inline const ::std::string& GRData::m_byte(int index) const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.m_byte)
  return m_byte_.Get(index);
}
inline ::std::string* GRData::mutable_m_byte(int index) {
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.m_byte)
  return m_byte_.Mutable(index);
}
inline void GRData::set_m_byte(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grgrpc.GRData.m_byte)
  m_byte_.Mutable(index)->assign(value);
}
inline void GRData::set_m_byte(int index, const char* value) {
  m_byte_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grgrpc.GRData.m_byte)
}
inline void GRData::set_m_byte(int index, const void* value, size_t size) {
  m_byte_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grgrpc.GRData.m_byte)
}
inline ::std::string* GRData::add_m_byte() {
  // @@protoc_insertion_point(field_add_mutable:grgrpc.GRData.m_byte)
  return m_byte_.Add();
}
inline void GRData::add_m_byte(const ::std::string& value) {
  m_byte_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grgrpc.GRData.m_byte)
}
inline void GRData::add_m_byte(const char* value) {
  m_byte_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grgrpc.GRData.m_byte)
}
inline void GRData::add_m_byte(const void* value, size_t size) {
  m_byte_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grgrpc.GRData.m_byte)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GRData::m_byte() const {
  // @@protoc_insertion_point(field_list:grgrpc.GRData.m_byte)
  return m_byte_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GRData::mutable_m_byte() {
  // @@protoc_insertion_point(field_mutable_list:grgrpc.GRData.m_byte)
  return &m_byte_;
}

// string code = 2;
inline void GRData::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GRData::code() const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.code)
  return code_.GetNoArena();
}
inline void GRData::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.GRData.code)
}
#if LANG_CXX11
inline void GRData::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.GRData.code)
}
#endif
inline void GRData::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.GRData.code)
}
inline void GRData::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.GRData.code)
}
inline ::std::string* GRData::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GRData::release_code() {
  // @@protoc_insertion_point(field_release:grgrpc.GRData.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GRData::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.GRData.code)
}

// .grgrpc.GRData.Type type = 3;
inline void GRData::clear_type() {
  type_ = 0;
}
inline ::grgrpc::GRData_Type GRData::type() const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.type)
  return static_cast< ::grgrpc::GRData_Type >(type_);
}
inline void GRData::set_type(::grgrpc::GRData_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.GRData.type)
}

// repeated .grgrpc.Tag tag = 4;
inline int GRData::tag_size() const {
  return tag_.size();
}
inline void GRData::clear_tag() {
  tag_.Clear();
}
inline const ::grgrpc::Tag& GRData::tag(int index) const {
  // @@protoc_insertion_point(field_get:grgrpc.GRData.tag)
  return tag_.Get(index);
}
inline ::grgrpc::Tag* GRData::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:grgrpc.GRData.tag)
  return tag_.Mutable(index);
}
inline ::grgrpc::Tag* GRData::add_tag() {
  // @@protoc_insertion_point(field_add:grgrpc.GRData.tag)
  return tag_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >*
GRData::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:grgrpc.GRData.tag)
  return &tag_;
}
inline const ::google::protobuf::RepeatedPtrField< ::grgrpc::Tag >&
GRData::tag() const {
  // @@protoc_insertion_point(field_list:grgrpc.GRData.tag)
  return tag_;
}

// -------------------------------------------------------------------

// Bool

// bool boolean = 1;
inline void Bool::clear_boolean() {
  boolean_ = false;
}
inline bool Bool::boolean() const {
  // @@protoc_insertion_point(field_get:grgrpc.Bool.boolean)
  return boolean_;
}
inline void Bool::set_boolean(bool value) {
  
  boolean_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Bool.boolean)
}

// -------------------------------------------------------------------

// Float

// float _float = 1;
inline void Float::clear__float() {
  _float_ = 0;
}
inline float Float::_float() const {
  // @@protoc_insertion_point(field_get:grgrpc.Float._float)
  return _float_;
}
inline void Float::set__float(float value) {
  
  _float_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Float._float)
}

// -------------------------------------------------------------------

// Parameters

// float frequency = 1;
inline void Parameters::clear_frequency() {
  frequency_ = 0;
}
inline float Parameters::frequency() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.frequency)
  return frequency_;
}
inline void Parameters::set_frequency(float value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.frequency)
}

// float gain = 2;
inline void Parameters::clear_gain() {
  gain_ = 0;
}
inline float Parameters::gain() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.gain)
  return gain_;
}
inline void Parameters::set_gain(float value) {
  
  gain_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.gain)
}

// int32 sample_rate = 3;
inline void Parameters::clear_sample_rate() {
  sample_rate_ = 0;
}
inline ::google::protobuf::int32 Parameters::sample_rate() const {
  // @@protoc_insertion_point(field_get:grgrpc.Parameters.sample_rate)
  return sample_rate_;
}
inline void Parameters::set_sample_rate(::google::protobuf::int32 value) {
  
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Parameters.sample_rate)
}

// -------------------------------------------------------------------

// Tag

// uint64 offset = 1;
inline void Tag::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Tag::offset() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.offset)
  return offset_;
}
inline void Tag::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:grgrpc.Tag.offset)
}

// string key = 2;
inline void Tag::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tag::key() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.key)
  return key_.GetNoArena();
}
inline void Tag::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.key)
}
#if LANG_CXX11
inline void Tag::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.key)
}
#endif
inline void Tag::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.key)
}
inline void Tag::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.key)
}
inline ::std::string* Tag::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tag::release_key() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tag::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.key)
}

// string value = 3;
inline void Tag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tag::value() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.value)
  return value_.GetNoArena();
}
inline void Tag::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.value)
}
#if LANG_CXX11
inline void Tag::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.value)
}
#endif
inline void Tag::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.value)
}
inline void Tag::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.value)
}
inline ::std::string* Tag::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tag::release_value() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.value)
}

// string srcid = 4;
inline void Tag::clear_srcid() {
  srcid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tag::srcid() const {
  // @@protoc_insertion_point(field_get:grgrpc.Tag.srcid)
  return srcid_.GetNoArena();
}
inline void Tag::set_srcid(const ::std::string& value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grgrpc.Tag.srcid)
}
#if LANG_CXX11
inline void Tag::set_srcid(::std::string&& value) {
  
  srcid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grgrpc.Tag.srcid)
}
#endif
inline void Tag::set_srcid(const char* value) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grgrpc.Tag.srcid)
}
inline void Tag::set_srcid(const char* value, size_t size) {
  
  srcid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grgrpc.Tag.srcid)
}
inline ::std::string* Tag::mutable_srcid() {
  
  // @@protoc_insertion_point(field_mutable:grgrpc.Tag.srcid)
  return srcid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tag::release_srcid() {
  // @@protoc_insertion_point(field_release:grgrpc.Tag.srcid)
  
  return srcid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tag::set_allocated_srcid(::std::string* srcid) {
  if (srcid != NULL) {
    
  } else {
    
  }
  srcid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcid);
  // @@protoc_insertion_point(field_set_allocated:grgrpc.Tag.srcid)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace grgrpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::grgrpc::GRData_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::grgrpc::GRData_Type>() {
  return ::grgrpc::GRData_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_grgrpc_2eproto__INCLUDED
